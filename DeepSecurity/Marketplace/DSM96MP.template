{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description"              : "v2015-07-06: Deploys Deep Security Manager to AWS. This template is designed to be nested in a stack, and requires several passed parameters to launch. **WARNING** This template creates Amazon EC2 instances and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Parameters"               : {
        "AWSIKeyPairName" : {
            "Description" : "Existing key pair to use for connecting to your Deep Security Manager Instance",
            "Type"        : "AWS::EC2::KeyPair::KeyName",
            "MinLength"   : "1",
            "MaxLength"   : "255",
            "AllowedPattern" : "[-_a-zA-Z0-9]*",
            "ConstraintDescription" : "Select an existing EC2 Key Pair."
        },
        "AWSIVPC"         : {
            "Description" : "Existing VPC to deploy Deep Security Manager",
            "Type"        : "AWS::EC2::VPC::Id",
            "MinLength"   : "1",
            "MaxLength"   : "255",
            "AllowedPattern" : "[-_a-zA-Z0-9]*"
        },
        "DSCAdminName"    : {
            "Default" : "MasterAdmin",
            "NoEcho"  : false,
            "Description" : "The Deep Security Manager administrator account username for Web Console Access",
            "Type"        : "String",
            "MinLength"   : 1,
            "MaxLength"   : 16,
            "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
        },
        "DSCAdminPassword" : {
            "NoEcho" : true,
            "Description" : "The Deep Security Manager administrator account password",
            "Type"        : "String",
            "MinLength"   : 8,
            "MaxLength"   : 41,
            "AllowedPattern" : "[a-zA-Z0-9]*",
            "ConstraintDescription" : "must contain only alphanumeric characters."
        },
        "DSIPLicenseKey"   : {
            "Description" : "Deep Security License key including dashes (e.g. AP-E9RM-99WHE-B5UR5-BV8YB-HVYM8-HYYVG)",
            "Type"        : "String",
            "MinLength"   : 37,
            "MaxLength"   : 37,
            "AllowedPattern" : "[A-Z0-9]{2}-[A-Z0-9]{4}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}",
            "ConstraintDescription" : "Key can only contain ASCII characters.",
            "Default"               : "XX-XXXX-XXXXX-XXXXX-XXXXX-XXXXX-XXXXX"
        },
        "DSIPHeartbeatPort" : {
            "Description" : "The heartbeat port used by Deep Security Agents and appliances to communicate with the Deep Security Manager.",
            "Type"        : "Number",
            "MinValue"    : 0,
            "MaxValue"    : 65535,
            "Default"     : "4120",
            "ConstraintDescription" : "Must be a valid TCP port."
        },
        "DSIPGUIPort"       : {
            "Description" : "The Deep Security Manager application and GUI port.",
            "Type"        : "Number",
            "MinValue"    : 0,
            "MaxValue"    : 65535,
            "Default"     : "4119",
            "ConstraintDescription" : "Must be a valid TCP port."
        },
        "DSIPInstanceType"  : {
            "Description" : "Amazon EC2 instance type for the Deep Security Manager Node Instances",
            "Type"        : "String",
            "Default"     : "m3.large",
            "AllowedValues" : [
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "g2.2xlarge"
            ]
        },
        "DBICAdminName"     : {
            "Default" : "dsadmin",
            "NoEcho"  : false,
            "Description" : "Admin account username to be used for the database instance",
            "Type"        : "String",
            "MinLength"   : 1,
            "MaxLength"   : 16,
            "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
        },
        "DBICAdminPassword" : {
            "NoEcho" : true,
            "Description" : "Password to be used for the database admin account",
            "Type"        : "String",
            "MinLength"   : 8,
            "MaxLength"   : 41,
            "AllowedPattern" : "[a-zA-Z0-9]*",
            "ConstraintDescription" : "must contain only alphanumeric characters."
        },
        "DBPName"           : {
            "Default" : "dsm",
            "Description" : "Name to be assigned to the database",
            "Type"        : "String",
            "MinLength"   : 1,
            "MaxLength"   : 64,
            "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
        },
        "DBPRDSEndpoint"    : {
            "Default" : "RDS.FQDN.domain",
            "Description" : "FQDN or IP of RDS Endpoint",
            "Type"        : "String",
            "MinLength"   : "1",
            "MaxLength"   : "64"
        },
        "DSMSG"             : {
            "Type" : "AWS::EC2::SecurityGroup::Id"
        },
        "DBPEngine"         : {
            "Default" : "Embedded",
            "Type"    : "String",
            "AllowedValues" : [
                "Embedded",
                "Oracle",
                "SQL"
            ]
        },
        "DSISubnetID"       : {
            "Description" : "Existing Subnet for Deep Seucurity Manager. Must be a public subnet contained the in VPC chosen above.",
            "Type"        : "AWS::EC2::Subnet::Id",
            "MinLength"   : "1",
            "MaxLength"   : "255",
            "AllowedPattern" : "[-_a-zA-Z0-9]*",
            "ConstraintDescription" : "Subnet ID must exist in the chosen VPC"
        },
        "DSMPMNode"         : {
            "Description" : "Select whether this is an additional node to be added to an existing Deep Security Manager Infrastructure",
            "Type"        : "String",
            "AllowedValues" : [
                "Yes",
                "No"
            ],
            "Default"       : "No"
        },
        "DSIPLicense"       : {
            "Description" : "Choose License Model. If choosing BYOL you may enter the license below",
            "Type"        : "String",
            "AllowedValues" : [
                "BYOL",
                "25",
                "50",
                "100",
                "200"
            ]
        },
        "CreateEIP"         : {
            "Description" : "Allocate an EIP and associate it with this Deep Security Manager Instance. Recommend set to true unless deploying behind an ELB",
            "Type"        : "String",
            "AllowedValues" : [
                "True",
                "False"
            ],
            "Default"       : "True"
        },
        "DSIELB"            : {
            "Type" : "String",
            "Default" : ""
        },
        "DSIELBFQDN"        : {
            "Type" : "String",
            "Default" : ""
        },
        "DSM1CompleteWaitHandle" : {
            "Type" : "String",
            "Default" : ""
        },
		"PrivateDSIELBFQDN" : {
			"Type" : "String",
			"Default" : ""
			},
		"PrivateDSIELB" : {
			"Type" : "String",
			"Default" : ""
			}
    },
    "Mappings"                 : {
        "DSMAMI" : {
            "us-east-1" : {
                "BYOL" : "ami-39b93f52",
                "25"   : "ami-29b93f42",
                "50"   : "ami-29b93f42",
                "100"  : "ami-29b93f42",
                "200"  : "ami-29b93f42"
            },
            "us-west-1" : {
                "BYOL" : "ami-553fc411",
                "25"   : "ami-453fc401",
                "50"   : "ami-453fc401",
                "100"  : "ami-453fc401",
                "200"  : "ami-453fc401"
            },
            "us-west-2" : {
                "BYOL" : "ami-e37162d3",
                "25"   : "ami-ef7162df",
                "50"   : "ami-ef7162df",
                "100"  : "ami-ef7162df",
                "200"  : "ami-ef7162df"
            },
            "eu-west-1" : {
                "BYOL" : "ami-3ff8dc48",
                "25"   : "ami-25f8dc52",
                "50"   : "ami-25f8dc52",
                "100"  : "ami-25f8dc52",
                "200"  : "ami-25f8dc52"
            },
            "eu-central-1" : {
                "BYOL" : "",
                "25"   : "ami-661c1d7b",
                "50"   : "ami-661c1d7b",
                "100"  : "ami-661c1d7b",
                "200"  : "ami-661c1d7b"
            },
            "ap-southeast-1" : {
                "BYOL" : "ami-10181342",
                "25"   : "ami-46191214",
                "50"   : "ami-46191214",
                "100"  : "ami-46191214",
                "200"  : "ami-46191214"
            },
            "ap-northeast-1" : {
                "BYOL" : "ami-908c0390",
                "25"   : "ami-6c8c036c",
                "50"   : "ami-6c8c036c",
                "100"  : "ami-6c8c036c",
                "200"  : "ami-6c8c036c"
            },
            "ap-southeast-2" : {
                "BYOL" : "ami-a5367a9f",
                "25"   : "ami-75367a4f",
                "50"   : "ami-75367a4f",
                "100"  : "ami-75367a4f",
                "200"  : "ami-75367a4f"
            },
            "sa-east-1"      : {
                "BYOL" : "ami-5d8a0040",
                "25"   : "ami-238a003e",
                "50"   : "ami-238a003e",
                "100"  : "ami-238a003e",
                "200"  : "ami-238a003e"
            }
        },
        "DSMSIZE" : {
            "BYOL" : {
                "TYPE" : "c3.2xlarge"
            },
            "25"   : {
                "TYPE" : "m3.large"
            },
            "50"   : {
                "TYPE" : "m3.xlarge"
            },
            "100"  : {
                "TYPE" : "m3.2xlarge"
            },
            "200"  : {
                "TYPE" : "c3.4xlarge"
            }
        },
        "TrendRegionMap" : {
            "us-east-1" : {
                "regionkey" : "amazon.cloud.region.key.1"
            },
            "us-west-2" : {
                "regionkey" : "amazon.cloud.region.key.2"
            },
            "us-west-1" : {
                "regionkey" : "amazon.cloud.region.key.3"
            },
            "eu-west-1" : {
                "regionkey" : "amazon.cloud.region.key.4"
            },
            "ap-southeast-1" : {
                "regionkey" : "amazon.cloud.region.key.5"
            },
            "ap-northeast-1" : {
                "regionkey" : "amazon.cloud.region.key.6"
            },
            "sa-east-1"      : {
                "regionkey" : "amazon.cloud.region.key.7"
            }
        },
        "DSMDBMap"       : {
            "SQL" : {
                "DbTypeString" : "Microsoft SQL Server"
            },
            "Oracle" : {
                "DbTypeString" : "Oracle"
            },
            "Embedded" : {
                "DbTypeString" : "Embedded"
            }
        }
    },
    "Resources"                : {
        "DSIAMUser" : {
            "Type" : "AWS::IAM::User",
            "Properties" : {
            }
        },
        "DSIAMGroup" : {
            "Type" : "AWS::IAM::Group"
        },
        "Users"      : {
            "Type" : "AWS::IAM::UserToGroupAddition",
            "Properties" : {
                "GroupName" : {
                    "Ref" : "DSIAMGroup"
                },
                "Users"     : [
                    {
                        "Ref" : "DSIAMUser"
                    }
                ]
            }
        },
        "DSMUserPolicies" : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "DSMUsers",
                "PolicyDocument" : {
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "ec2:DescribeInstances",
                                "ec2:DescribeImages",
                                "ec2:DescribeTags"
                            ],
                            "Resource" : "*"
                        }
                    ]
                },
                "Groups"         : [
                    {
                        "Ref" : "DSIAMGroup"
                    }
                ]
            }
        },
        "AccessKeys"      : {
            "Type" : "AWS::IAM::AccessKey",
            "Properties" : {
                "UserName" : {
                    "Ref" : "DSIAMUser"
                }
            }
        },
        "DSMRole"         : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "AssumeRolePolicyDocument" : {
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Principal" : {
                                "Service" : [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action"    : [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path"                     : "/",
                "Policies"                 : [
                    {
                        "Fn::If" : [
                            "AddToELB",
                            {
                                "PolicyName" : "PlaceholderPolicy",
                                "PolicyDocument" : {
                                    "Statement" : [
                                        {
                                            "Effect" : "Allow",
                                            "Action" : [
                                                "ec2:DescribeLicenses"
                                            ],
                                            "Resource" : "*"
                                        },
                                        {
                                            "Effect" : "Allow",
                                            "Action" : [
                                                "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
                                            ],
                                            "Resource" : {
                                                "Fn::Join" : [
                                                    "",
                                                    [
                                                        "arn:aws:elasticloadbalancing:",
                                                        {
                                                            "Ref" : "AWS::Region"
                                                        },
                                                        ":",
                                                        {
                                                            "Ref" : "AWS::AccountId"
                                                        },
                                                        ":loadbalancer/",
                                                        {
                                                            "Ref" : "DSIELB"
                                                        }
                                                    ]
                                                ]
                                            }
                                        },
                                        {
                                            "Effect" : "Allow",
                                            "Action" : [
                                                "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
                                            ],
											"Resource" : {
												"Fn::Join" : [
													"",
													[
														"arn:aws:elasticloadbalancing:",
														{ "Ref" : "AWS::Region"},
														":",
														{ "Ref" : "AWS::AccountId" },
														":loadbalancer/",
														{ "Ref" : "PrivateDSIELB" }
													]
												]
											}
                                        }
                                    ]
                                }
                            },
                            {
                                "PolicyName" : "PlaceholderPolicy",
                                "PolicyDocument" : {
                                    "Statement" : [
                                        {
                                            "Effect" : "Allow",
                                            "Action" : [
                                                "ec2:DescribeLicenses"
                                            ],
                                            "Resource" : "*"
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                ]
            }
        },
        "DSMProfile"      : {
            "Type" : "AWS::IAM::InstanceProfile",
            "Properties" : {
                "Path" : "/",
                "Roles" : [
                    {
                        "Ref" : "DSMRole"
                    }
                ]
            }
        },
        "DSM"             : {
            "Type" : "AWS::EC2::Instance",
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "configSets" : {
                        "default" : [
                            "setup",
                            "prepDSMInstall",
                            "installDSM",
                            "addCloudAccount",
							"fixManagerHostObject"
                        ],
                        "doSqlSetup" : [
                            "sqlSetup"
                        ],
						"fixManagerLbSettings" : [
							"fixManagerLoadBalancerSettings"
							],
						"fixManagerLocalLbAddress" : [
							"fixManagerLocalLoadBalancerHostsFile"
							],
						"fixManagerHostObject" : [
							"fixManagerHostObject"
							],
                        "addDsmNode" : [
							"setup",
                            "prepDSMInstall",
                            "installDSM",
							"fixManagerHostObject"
                        ],
						"setupLocalELB" : [
							"addToELB",
							"fixManagerLocalLoadBalancerHostsFile"
						],
						"setupGlobalELB" : [
							"fixManagerLoadBalancerSettings"
							]
                    },
                    "setup"      : {
                        "files" : {
                            "/etc/cfn/cfn-hup.conf" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref" : "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode"    : "000400",
                                "owner"   : "root",
                                "group"   : "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.DSM.Metadata.AWS::CloudFormation::Init\n",
                                            "action=/opt/aws/bin/cfn-init -v -c updateDSM --stack ",
                                            {
                                                "Ref" : "AWS::StackId"
                                            },
                                            " --resource DSM1",
                                            " --region ",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            " runas=root\n"
                                        ]
                                    ]
                                }
                            }
                        },
                        "services" : {
                            "sysvinit" : {
                                "cfn-hup" : {
                                    "enabled" : "true",
                                    "ensureRunning" : "true",
                                    "files"         : [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "prepDSMInstall" : {
                        "files" : {
                            "/opt/trend/packages/dsm/default/Agent-amzn1-9.6.1-1308.x86_64.zip" : {
                                "source" : "http://files.trendmicro.com/products/deepsecurity/en/9.6/Agent-amzn1-9.6.1-1308.x86_64.zip",
                                "owner"  : "root",
                                "mode"   : "000600"
                            },
                            "/opt/trend/packages/dsm/default/KernelSupport-amzn1-9.6.1-1540.x86_64.zip" : {
                                "source" : "http://files.trendmicro.com/products/deepsecurity/en/9.6/KernelSupport-amzn1-9.6.1-1540.x86_64.zip",
                                "owner"  : "root",
                                "mode"   : "000600"
                            },
                            "/opt/trend/packages/dsm/default/Agent-RedHat_EL6-9.6.1-1308.x86_64.zip"    : {
                                "source" : "http://files.trendmicro.com/products/deepsecurity/en/9.6/Agent-RedHat_EL6-9.6.1-1308.x86_64.zip",
                                "owner"  : "root",
                                "mode"   : "000600"
                            },
                            "/opt/trend/packages/dsm/default/KernelSupport-RedHat_EL6-9.6.1-1628.x86_64.zip" : {
                                "source" : "http://files.trendmicro.com/products/deepsecurity/en/9.6/KernelSupport-RedHat_EL6-9.6.1-1628.x86_64.zip",
                                "owner"  : "root",
                                "mode"   : "000600"
                            },
                            "/etc/cfn/dsmConfiguration.properties"                                           : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            {
                                                "Fn::If" : [
                                                    "AddAcAnswer",
                                                    {
                                                        "Fn::Join" : [
                                                            "",
                                                            [
                                                                "LicenseScreen.License.-1=",
                                                                {
                                                                    "Ref" : "DSIPLicenseKey"
                                                                }
                                                            ]
                                                        ]
                                                    },
                                                    "\n"
                                                ]
                                            },
                                            "\n",
                                            "CredentialsScreen.Administrator.Username=",
                                            {
                                                "Ref" : "DSCAdminName"
                                            },
                                            "\n",
                                            "CredentialsScreen.Administrator.Password=",
                                            {
                                                "Ref" : "DSCAdminPassword"
                                            },
                                            "\n",
                                            "CredentialsScreen.UseStrongPasswords=False\n",
                                            "Dinstall4j.language=en\n",
                                            "DatabaseScreen.DatabaseType=",
                                            {
                                                "Fn::FindInMap" : [
                                                    "DSMDBMap",
                                                    {
                                                        "Ref" : "DBPEngine"
                                                    },
                                                    "DbTypeString"
                                                ]
                                            },
                                            "\n",
                                            "DatabaseScreen.Hostname=",
                                            {
                                                "Ref" : "DBPRDSEndpoint"
                                            },
                                            "\n",
                                            "DatabaseScreen.DatabaseName=",
                                            {
                                                "Ref" : "DBPName"
                                            },
                                            "\n",
                                            "DatabaseScreen.Transport=TCP\n",
                                            "DatabaseScreen.Username=",
                                            {
                                                "Ref" : "DBICAdminName"
                                            },
                                            "\n",
                                            "DatabaseScreen.Password=",
                                            {
                                                "Ref" : "DBICAdminPassword"
                                            },
                                            "\n",
                                            "AddressAndPortsScreen.ManagerPort=",
                                            {
                                                "Ref" : "DSIPGUIPort"
                                            },
                                            "\n",
                                            "AddressAndPortsScreen.HeartbeatPort=",
                                            {
                                                "Ref" : "DSIPHeartbeatPort"
                                            },
                                            "\n",
                                            {
                                                "Fn::If" : [
                                                    "IsFirstNode",
                                                    "AddressAndPortsScreen.NewNode=false\n",
                                                    "AddressAndPortsScreen.NewNode=true\nUpgradeVerificationScreen.Overwrite=False\n"
                                                ]
                                            },
                                            "SecurityUpdateScreen.UpdateComponents=true\n",
                                            "SecurityUpdateScreen.UpdateSoftware=true\n",
                                            "SmartProtectionNetworkScreen.EnableFeedback=false\n",
                                            "SmartProtectionNetworkScreen.IndustryType=blank\n",
                                            "RelayScreen.Install=True\n",
                                            "RelayScreen.ProxyType=None\n",
                                            "RelayScreen.ProxyPort=None\n",
                                            "RelayScreen.Proxy=False\n",
                                            "RelayScreen.AntiMalware=True\n",
                                            "RelayScreen.ProxyAuthentication=False\n"
                                        ]
                                    ]
                                },
                                "owner"   : "root",
                                "mode"    : "000600"
                            }
                        }
                    },
                    "installDSM"     : {
                        "commands" : {
                            "1-install-DSM" : {
                                "command" : "cd /opt/trend/packages/dsm/default/; sh /opt/trend/packages/dsm/default/Manager-AWS-9.6.2006.x64.sh -q -console -varfile /etc/cfn/dsmConfiguration.properties >> /tmp/dsmInstallLog",
                                "ignoreErrors" : "false"
                            }
                        }
                    },
                    "addCloudAccount" : {
                        "commands" : {
                            "0-sleep" : {
                                "command" : "/bin/sleep 60"
                            },
                            "1-enableRestApi" : {
                                "command" : "/opt/dsm/dsm_c -action changesetting -name settings.configuration.statusMonitoringAPIEnabled -value true"
                            },
                            "2-enableSoapApi" : {
                                "command" : "/opt/dsm/dsm_c -action changesetting -name settings.configuration.webserviceAPIEnabled -value true"
                            },
                            "3-enableAgentIitiatedActivation" : {
                                "command" : "/opt/dsm/dsm_c -action changesetting -name settings.configuration.agentInitiatedActivation -value 2"
                            },
                            "4-enableAgentInitiatedReactivateHost" : {
                                "command" : "/opt/dsm/dsm_c -action changesetting -name settings.configuration.agentInitiatedActivationActiveHost -value 2"
                            },
							"5-sleep" : {
                                "command" : "/bin/sleep 30"
                            },
							"6-check-service" : { 
								"command" : "service dsm_s start"
								},
                            "8-addCloudAccount"                    : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "export sID=`curl -k -X POST -H \"Content-Type:application/json\" -d '{ \"dsCredentials\": {\"userName\": ",
                                            {
                                                "Ref" : "DSCAdminName"
                                            },
                                            ", \"password\": ",
                                            {
                                                "Ref" : "DSCAdminPassword"
                                            },
                                            "}}' https://localhost:",
                                            {
                                                "Ref" : "DSIPGUIPort"
                                            },
                                            "/rest/authentication/login`; ",
                                            "curl -k -X POST -H \"Content-Type:application/json\" -d '{\"createCloudAccountRequest\":{\"sessionId\":\"'\"${sID}\"'\",\"cloudAccountElement\":{\"accessKey\":\"",
                                            {
                                                "Ref" : "AccessKeys"
                                            },
                                            "\",\"cloudRegion\":\"",
                                            {
                                                "Fn::FindInMap" : [
                                                    "TrendRegionMap",
                                                    {
                                                        "Ref" : "AWS::Region"
                                                    },
                                                    "regionkey"
                                                ]
                                            },
                                            "\",\"cloudType\":\"AMAZON\",\"name\":\"Amazon\",\"azureCertificate\":\"\",\"secretKey\":\"",
                                            {
                                                "Fn::GetAtt" : [
                                                    "AccessKeys",
                                                    "SecretAccessKey"
                                                ]
                                            },
                                            "\"}}}' https://localhost:",
                                            {
                                                "Ref" : "DSIPGUIPort"
                                            },
                                            "/rest/cloudaccounts; ",
                                            "curl -k -X DELETE https://localhost:",
                                            {
                                                "Ref" : "DSIPGUIPort"
                                            },
                                            "/rest/authentication/logout?sID=\"${sID}\""
                                        ]
                                    ]
                                },
                                "ignoreErrors" : "False"
                            }
                        }
                    },
                    "sqlSetup"        : {
                        "commands" : {
                            "1-get-create-script" : {
                                "command" : "cd /etc/cfn/rhel-scripts; wget https://s3.amazonaws.com/cf-deepsecurity/96/v0.4/Scripts/create-DSM-SqlDB.py; chmod 755 create-DSM-SqlDB.py",
                                "ignoreErrors" : "false"
                            },
                            "2-create-db"         : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "cd /etc/cfn/rhel-scripts; python create-DSM-SqlDB.py --user ",
                                            {
                                                "Ref" : "DBICAdminName"
                                            },
                                            " --pass ",
                                            {
                                                "Ref" : "DBICAdminPassword"
                                            },
                                            " --endpoint ",
                                            {
                                                "Ref" : "DBPRDSEndpoint"
                                            },
                                            " --dbname ",
                                            {
                                                "Ref" : "DBPName"
                                            }
                                        ]
                                    ]
                                },
                                "ignoreErrors" : "false"
                            }
                        }
                    },
                    "addToELB"        : {
                        "commands" : {
                            "0-add-instance-to-elb" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "aws elb register-instances-with-load-balancer --load-balancer ",
                                            {
                                                "Ref" : "DSIELB"
                                            },
                                            " --instances $(curl http://169.254.169.254/latest/meta-data/instance-id/) --region ",
                                            {
                                                "Ref" : "AWS::Region"
                                            }
                                        ]
                                    ]
                                },
                                "ignoreErrors" : "false"
                            },
							"1-add-instance-to-internal-elb" : {
								"command" : {
									"Fn::Join" : [
										"",
										[	
											"aws elb register-instances-with-load-balancer --load-balancer ",
											{ "Ref" : "PrivateDSIELB" },
											" --instances $(curl http://169.254.169.254/latest/meta-data/instance-id/) --region ",
											{ "Ref" : "AWS::Region" }
										]
									]
								},
								"ignoreErrors" : "false"
							}
                        }
                    },
                    "fixManagerLoadBalancerSettings" : {
                        "commands" : {
							"0-wait-for-service-start" : {
								"command" : "sleep 10"
								},
                            "1-set-load-balancer-console" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "/opt/dsm/dsm_c -action changesetting -name settings.configuration.systemLoadBalancerManagerHostname -value ",
                                            {
                                                "Ref" : "PrivateDSIELBFQDN"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "2-set-load-balancer-console-port" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "/opt/dsm/dsm_c -action changesetting -name settings.configuration.systemLoadBalancerManagerPort -value ",
                                            {
                                                "Ref" : "DSIPGUIPort"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "3-set-load-balancer-heartbeat"    : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "/opt/dsm/dsm_c -action changesetting -name settings.configuration.systemLoadBalancerHeartbeatHostname -value ",
                                            {
                                                "Ref" : "PrivateDSIELBFQDN"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "4-set-load-balancer-heartbeat-port" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "/opt/dsm/dsm_c -action changesetting -name settings.configuration.systemLoadBalancerHeartbeatPort -value ",
                                            {
                                                "Ref" : "DSIPHeartbeatPort"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "5-set-load-balancer-relay-hostname" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "/opt/dsm/dsm_c -action changesetting -name settings.configuration.systemLoadBalancerRelayHostname -value ",
                                            {
                                                "Ref" : "PrivateDSIELBFQDN"
                                            }
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "fixManagerLocalLoadBalancerHostsFile" : {
                        "commands" : {
                            "setHostsFile" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "echo \"",
                                            "$(curl http://169.254.169.254/latest/meta-data/local-ipv4/)",
                                            " ",
                                            {
                                                "Ref" : "DSIELBFQDN"
                                            },
                                            "\" >> /etc/hosts"
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "fixManagerHostObject"             : {
                        "files" : {
                            "/etc/cfn/reactivate-manager" : {
                                "source" : "https://cf-deepsecurity.s3.amazonaws.com/96/v0.4/Scripts/reactivate-manager",
                                "owner"  : "root",
                                "mode"   : "000700"
                            }
                        },
                        "commands" : {
                            "0-install-xml_grep" : {
                                "command" : "yum -y install perl-XML-Twig"
                            },
                            "1-reactivate-manager" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "/etc/cfn/reactivate-manager >> /etc/cfn/reactivate-manager.log ",
                                            {
                                                "Ref" : "DSCAdminName"
                                            },
                                            " ",
                                            {
                                                "Ref" : "DSCAdminPassword"
                                            },
                                            " ",
                                            {
                                                "Ref" : "DSIPGUIPort"
                                            }
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties" : {
                "IamInstanceProfile" : {
                    "Ref" : "DSMProfile"
                },
                "ImageId"            : {
                    "Fn::FindInMap" : [
                        "DSMAMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Ref" : "DSIPLicense"
                        }
                    ]
                },
                "InstanceType"       : {
                    "Fn::If" : [
                        "UseBYOL",
                        {
                            "Ref" : "DSIPInstanceType"
                        },
                        {
                            "Fn::FindInMap" : [
                                "DSMSIZE",
                                {
                                    "Ref" : "DSIPLicense"
                                },
                                "TYPE"
                            ]
                        }
                    ]
                },
                "NetworkInterfaces"  : [
                    {
                        "DeviceIndex" : "0",
                        "SubnetId"    : {
                            "Ref" : "DSISubnetID"
                        },
                        "AssociatePublicIpAddress" : "true",
                        "GroupSet"                 : [
                            {
                                "Ref" : "DSMSG"
                            }
                        ]
                    }
                ],
                "Tags"               : [
                    {
                        "Key" : "Name",
                        "Value" : "Deep Security Manager"
                    }
                ],
                "KeyName"            : {
                    "Ref" : "AWSIKeyPairName"
                },
                "UserData"           : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "# cloud-init\n",
                                "/opt/aws/bin/cfn-init -v ",
                                " --stack ",
                                {
                                    "Ref" : "AWS::StackName"
                                },
                                " --resource DSM",
                                " --region ",
                                {
                                    "Ref" : "AWS::Region"
                                },
                                {
									"Fn::If" : [
										"SQLplusELB",
										" -c doSqlSetup,default,setupLocalELB,setupGlobalELB",
										{
											"Fn::If" : [
												"DoSQLSetup",
												" -c doSqlSetup,default",
												{
													"Fn::If" : [
														"IsFirstNodePlusELB",
														" -c default,setupLocalELB,setupGlobalELB",
														""
													]
												}
											]
										}
									]
								},
								{
									"Fn::If" : [
										"AddNodePlusELB",
										" -c fixManagerLocalLbAddress,addDsmNode,setupLocalELB",
										{
											"Fn::If" : [
												"IsFirstNode",
												"",
												" -c addDsmNode"
											]
										}
									]
								},
                                "\n",
                                {
                                    "Fn::If" : [
                                        "WaitNotProvided",
                                        "/opt/aws/bin/cfn-signal -e $?  -r \"Complete\" ''",
                                        {
                                            "Fn::Join" : [
                                                "",
                                                [
                                                    "/opt/aws/bin/cfn-signal -e $? -r \"DSM Node configuration complete\" ",
                                                    {
                                                        "Fn::Base64" : { "Ref" : "DSM1CompleteWaitHandle" }
                                                    }
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        }
    },
    "Conditions"               : {
        "DBTypeIsOracle" : {
            "Fn::Equals" : [
                {
                    "Ref" : "DBPEngine"
                },
                "Oracle"
            ]
        },
        "DBTypeIsSQL"    : {
            "Fn::Equals" : [
                {
                    "Ref" : "DBPEngine"
                },
                "SQL"
            ]
        },
        "DBTypeIsEmbedded" : {
            "Fn::Equals" : [
                {
                    "Ref" : "DBPEngine"
                },
                "Embedded"
            ]
        },
        "IsFirstNode"      : {
            "Fn::Equals" : [
                {
                    "Ref" : "DSMPMNode"
                },
                "No"
            ]
        },
        "DoSQLSetup"       : {
            "Fn::And" : [
                {
                    "Condition" : "DBTypeIsSQL"
                },
                {
                    "Condition" : "IsFirstNode"
                }
            ]
        },
        "UseBYOL"          : {
            "Fn::Equals" : [
                {
                    "Ref" : "DSIPLicense"
                },
                "BYOL"
            ]
        },
        "AddToELB"         : {
            "Fn::Not" : [
                {
                    "Fn::Equals" : [
                        {
                            "Ref" : "DSIELB"
                        },
                        ""
                    ]
                }
            ]
        },
        "WaitNotProvided"  : {
            "Fn::Equals" : [
                "DSM1CompleteWaitHandle",
                ""
            ]
        },
        "SQLplusELB"       : {
            "Fn::And" : [
                {
                    "Condition" : "AddToELB"
                },
                {
                    "Condition" : "DoSQLSetup"
                }
            ]
        },
        "AddNodePlusELB"   : {
            "Fn::And" : [
                {
                    "Fn::Not" : [
                        {
                            "Condition" : "IsFirstNode"
                        }
                    ]
                },
                {
                    "Condition" : "AddToELB"
                }
            ]
        },
        "KeyProvided"      : {
            "Fn::Not" : [
                {
                    "Fn::Equals" : [
                        {
                            "Ref" : "DSIPLicenseKey"
                        },
                        "XX-XXXX-XXXXX-XXXXX-XXXXX-XXXXX-XXXXX"
                    ]
                }
            ]
        },
		"IsFirstNodePlusELB" : {
            "Fn::And" : [
                {
                    "Condition" : "IsFirstNode"
                },
                {
                    "Condition" : "AddToELB"
                }
            ]
        },
		"AddAcAnswer" : {
			"Fn::And" : [
				{ "Condition" : "KeyProvided" },
				{ "Condition" : "UseBYOL" }
			]
		}
    },
    "Outputs"                  : {
        "DSMFQDN" : {
            "Value" : {
                "Fn::GetAtt" : [
                    "DSM",
                    "PublicDnsName"
                ]
            }
        },
        "DSMURL"  : {
            "Value" : {
                "Fn::Join" : [
                    "",
                    [
                        "https://",
                        {
                            "Fn::GetAtt" : [
                                "DSM",
                                "PublicDnsName"
                            ]
                        },
                        ":",
                        {
                            "Ref" : "DSIPGUIPort"
                        }
                    ]
                ]
            }
        },
        "DSMInstanceId" : {
            "Value" : {
                "Ref" : "DSM"
            }
        }
    }
}